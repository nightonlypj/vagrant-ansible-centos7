[test]
test.mydomain

[db-servers:children]
test

[web-servers:children]
test

[all:vars]
ansible_ssh_port=22
#ansible_ssh_user=ansible
hosts_env=test
hosts_allow_sshd=x.x.x.x, 127.0.0.1, 10.0.0.0/255.0.0.0, 172.16.0.0/255.240.0.0, 192.168.0.0/255.255.0.0, [::1], [fc00::]/7, [fe80::]/10
hosts_allow_httpd=ALL
hosts_allow_mysqld={{ hosts_allow_sshd }}
hosts_allow_postgresql={{ hosts_allow_sshd }}
firewalld_internal_addresses='["x.x.x.x", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "fe80::/10"]'
firewalld_enable_http_public=1
firewalld_enable_tomcat_internal=1
firewalld_enable_mysqld_internal=1
firewalld_enable_postgresql_internal=1
firewalld_enable_redis_internal=1
firewalld_enable_mongodb_internal=1
squid_http_port=3128
firewalld_enable_squid_public=1
### system ###
localtime=Japan
vconsole_keymap=jp106
locale_lang="ja_JP.UTF-8"
### aliases ###
aliases_notice=admin@mydomain
aliases_warning=admin@mydomain
aliases_critical=admin@mydomain
### chronyd ###
# Use CentOS default
#chronyd_servers='["0.centos.pool.ntp.org", "1.centos.pool.ntp.org", "2.centos.pool.ntp.org", "3.centos.pool.ntp.org"]'
# Use Amazon Linux
chronyd_servers='["0.amazon.pool.ntp.org", "1.amazon.pool.ntp.org", "2.amazon.pool.ntp.org", "3.amazon.pool.ntp.org"]'
### END ###

[db-servers:vars]
### MySQL/MariaDB ###
mysql_root_password=changepasswd
mysql_dbname=mytest
mysql_username=myuser
mysql_password=changepasswd
mysql_validate_password_policy=LOW
mysql_validate_password_length=6
### PostgreSQL ###
postgresql_dbname=pgtest
postgresql_username=pguser
postgresql_password=changepasswd
### END ###

[web-servers:vars]
### Tomcat ###
tomcat_enable_manager=1
tomcat_user_name=admin
tomcat_user_password=changepasswd
### Apache/Nginx ###
nginx_enable_php=1
httpd_front_servername=test.mydomain
# Use www redirect
httpd_front_sub_servername=
httpd_front_www_servername=www.{{ httpd_front_servername }}
# Use Subdomain
#httpd_front_sub_servername=*.{{ httpd_front_servername }}
#httpd_front_www_servername=
# Front access control [0=None, 1=Allow IP only(allow-ip.inc), 2=Allow IP(allow-ip.inc) or Basic Auth(.htpasswd)]
front_access_control=0
### Load Balancer ###
# No use
httpd_ssl_is_80port=0
httpd_ssl_check_header=
nginx_ssl_check_header=
httpd_ssl_check_value=
httpd_log_host_header=
nginx_log_real_ip_from=
# Use ELB
#httpd_ssl_is_80port=1
#httpd_ssl_check_header=X-Forwarded-Proto
#nginx_ssl_check_header=x_forwarded_proto
#httpd_ssl_check_value=https
#httpd_log_host_header=X-Forwarded-For
#nginx_log_real_ip_from=172.31.0.0/16
### SSL Certificate ###
# Use default
#httpd_enable_letsencrypt=0
#httpd_front_crt_file=/etc/pki/tls/certs/localhost.crt
#httpd_front_key_file=/etc/pki/tls/private/localhost.key
#httpd_front_chain_file=
#httpd_front_fullchain_file={{ httpd_front_crt_file }}
#httpd_front_www_crt_file={{ httpd_front_crt_file }}
#httpd_front_www_key_file={{ httpd_front_key_file }}
#httpd_front_www_chain_file={{ httpd_front_chain_file }}
#httpd_front_www_fullchain_file={{ httpd_front_fullchain_file }}
# Use Let's Encrypt(1=Not overwrite, 2=Force overwrite)
httpd_enable_letsencrypt=1
httpd_front_crt_file=/etc/letsencrypt/live/{{ httpd_front_servername }}/cert.pem
httpd_front_key_file=/etc/letsencrypt/live/{{ httpd_front_servername }}/privkey.pem
httpd_front_chain_file=/etc/letsencrypt/live/{{ httpd_front_servername }}/chain.pem
httpd_front_fullchain_file=/etc/letsencrypt/live/{{ httpd_front_servername }}/fullchain.pem
httpd_front_www_crt_file=/etc/letsencrypt/live/{{ httpd_front_www_servername }}/cert.pem
httpd_front_www_key_file=/etc/letsencrypt/live/{{ httpd_front_www_servername }}/privkey.pem
httpd_front_www_chain_file=/etc/letsencrypt/live/{{ httpd_front_www_servername }}/chain.pem
httpd_front_www_fullchain_file=/etc/letsencrypt/live/{{ httpd_front_www_servername }}/fullchain.pem
### END ###
