### yum ###
- import_tasks: repos.yml
- when: ansible_distribution == 'CentOS'
  name: (CentOS) yum -y --enablerepo=pgdg96 install postgresql96 postgresql96-server postgresql96-devel postgresql96-contrib python-psycopg2
  yum: name={{ item }} state=present enablerepo=pgdg96
  with_items:
    - postgresql96
    - postgresql96-server
    - postgresql96-devel
    - postgresql96-contrib
    - python-psycopg2
- when: ansible_distribution == 'Amazon'
  name: (Amazon) amazon-linux-extras enable postgresql9.6
  shell: amazon-linux-extras enable postgresql9.6
- when: ansible_distribution == 'Amazon'
  name: (Amazon) yum -y install postgresql postgresql-server postgresql-devel postgresql-contrib python-psycopg2
  yum: name={{ item }} state=present
  with_items:
    - postgresql
    - postgresql-server
    - postgresql-devel
    - postgresql-contrib
    - python-psycopg2

- when: ansible_distribution == 'CentOS'
  name: (CentOS) ln -sfn /usr/pgsql-9.6/bin/pg_config /usr/bin/pg_config
  file: src="/usr/pgsql-9.6/bin/pg_config" dest="/usr/bin/pg_config" state=link force=yes

### Amazon to CentOS ###
- when: ansible_distribution == 'Amazon'
  name: (Amazon) cd /var/lib/pgsql; mkdir -p 9.6; chmod 700 9.6; chown postgres:postgres 9.6
  file: path="/var/lib/pgsql/9.6" state=directory mode=700 owner=postgres group=postgres
- when: ansible_distribution == 'Amazon'
  name: (Amazon) ln -sfn /var/lib/pgsql/data /var/lib/pgsql/9.6/data
  file: src="/var/lib/pgsql/data" dest="/var/lib/pgsql/9.6/data" state=link force=yes
- when: ansible_distribution == 'Amazon'
  name: (Amazon) cd /usr; mkdir -p pgsql-9.6/bin; chmod 700 pgsql-9.6/{..,bin}; chown postgres:postgres pgsql-9.6/{..,bin}
  file: path="/usr/pgsql-9.6/bin" state=directory mode=700 owner=postgres group=postgres
- when: ansible_distribution == 'Amazon'
  name: (Amazon) ln -sfn /usr/bin/postgresql-setup /usr/pgsql-9.6/bin/postgresql96-setup
  file: src="/usr/bin/postgresql-setup" dest="/usr/pgsql-9.6/bin/postgresql96-setup" state=link force=yes
- when: ansible_distribution == 'Amazon'
  name: (Amazon) ln -sfn /usr/lib/systemd/system/postgresql.service /usr/lib/systemd/system/postgresql-9.6.service
  file: src="/usr/lib/systemd/system/postgresql.service" dest="/usr/lib/systemd/system/postgresql-9.6.service" state=link force=yes

### init ###
- name: test ! -e /var/lib/pgsql/9.6/data/postgresql.conf
  stat: path=/var/lib/pgsql/9.6/data/postgresql.conf
  register: f
- when: not f.stat.exists
  name: (first) /usr/pgsql-9.6/bin/postgresql96-setup initdb
  shell: /usr/pgsql-9.6/bin/postgresql96-setup initdb

### conf ###
- name: cd /var/lib/pgsql/9.6/data; cp /vagrant/ansible/roles/postgresql96/templates/var/lib/pgsql/9.6/data/*.conf ./; chmod 600 *.conf; chown postgres:postgres *.conf
  template: src={{ item }} dest="/var/lib/pgsql/9.6/data/" mode=600 owner=postgres group=postgres backup=yes
  with_fileglob:
    - "templates/var/lib/pgsql/9.6/data/*.conf"
  notify: systemctl restart postgresql-9.6

### log ###
- name: cd /var/log; mkdir -p pgsql; chmod 750 pgsql; chown postgres:wheel pgsql
  file: path="/var/log/pgsql" state=directory mode=750 owner=postgres group=wheel
- name: ln -sfn /var/log/pgsql /var/lib/pgsql/9.6/data/pg_log
  file: src="/var/log/pgsql" dest="/var/lib/pgsql/9.6/data/pg_log" state=link force=yes

- name: cd /etc/cron.daily; cp /vagrant/ansible/roles/postgresql/templates/etc/cron.daily/logcompress_postgresql.cron ./; chmod 740 logcompress_postgresql.cron; chown root:wheel logcompress_postgresql.cron
  template: src="templates/etc/cron.daily/logcompress_postgresql.cron" dest="/etc/cron.daily/" mode=740 owner=root group=wheel backup=no
- name: cd /etc/logrotate.d; cp /vagrant/ansible/roles/postgresql/templates/etc/logrotate.d/logcompress_postgresql ./; chmod 644 logcompress_postgresql; chown root:root logcompress_postgresql
  template: src="templates/etc/logrotate.d/logcompress_postgresql" dest="/etc/logrotate.d/" mode=644 owner=root group=root backup=no

### backup ###
- name: mkdir -p /var/backup/pg_dump; chmod 750 /var/backup/{.,pg_dump}; chown root:wheel /var/backup/{.,pg_dump}
  file: path={{ item }} state=directory mode=750 owner=root group=wheel
  with_items:
    - "/var/backup"
    - "/var/backup/pg_dump"
- name: cd /etc/cron.daily; cp /vagrant/ansible/roles/postgresql/templates/etc/cron.daily/backup_postgresql.cron ./; chmod 740 backup_postgresql.cron; chown root:wheel backup_postgresql.cron
  template: src="templates/etc/cron.daily/backup_postgresql.cron" dest="/etc/cron.daily/" mode=740 owner=root group=wheel backup=no
- name: cd /etc/logrotate.d; cp /vagrant/ansible/roles/postgresql/templates/etc/logrotate.d/backup_postgresql ./; chmod 644 backup_postgresql; chown root:root backup_postgresql
  template: src="templates/etc/logrotate.d/backup_postgresql" dest="/etc/logrotate.d/" mode=644 owner=root group=root backup=no

### start ###
- name: systemctl start postgresql-9.6; systemctl enable postgresql-9.6
  systemd: name=postgresql-9.6 state=started enabled=yes

### create database/user ###
- name: sudo -u postgres createdb {{ postgresql_dbname }}
  postgresql_db:
    name: "{{ postgresql_dbname }}"
    login_user: postgres
  become_user: postgres
- name: sudo -u postgres createuser -P {{ postgresql_username }}; {{ postgresql_password }}
  postgresql_user:
    name: "{{ postgresql_username }}"
    password: "{{ postgresql_password }}"
    login_user: postgres
  become_user: postgres
