### yum ###
- import_tasks: roles/common/tasks/epel.yml
- name: yum -y --enablerepo=epel install certbot
  yum: name=certbot state=present enablerepo=epel

### Let's Encrypt ###
- when: httpd_enable_letsencrypt == 1
  name: (Let's Encrypt) cd /etc/letsencrypt/live/{{ httpd_front_servername }}; cp /vagrant/ansible/roles/letsencrypt/templates/etc/letsencrypt/live/{{ httpd_front_servername }}/*.pem ./; chmod 644 *.pem; chown root:root *.pem
  copy: src={{ item }} dest="/etc/letsencrypt/live/{{ httpd_front_servername }}/" mode=664 owner=root group=root force=no
  with_fileglob:
    - "templates/etc/letsencrypt/live/{{ httpd_front_servername }}/*.pem"
- when: httpd_enable_letsencrypt == 2
  name: (Let's Encrypt[force]) cd /etc/letsencrypt/live/{{ httpd_front_servername }}; cp /vagrant/ansible/roles/letsencrypt/templates/etc/letsencrypt/live/{{ httpd_front_servername }}/*.pem ./; chmod 644 *.pem; chown root:root *.pem
  copy: src={{ item }} dest="/etc/letsencrypt/live/{{ httpd_front_servername }}/" mode=664 owner=root group=root force=yes
  with_fileglob:
    - "templates/etc/letsencrypt/live/{{ httpd_front_servername }}/*.pem"

- when: httpd_enable_letsencrypt == 1 and httpd_front_www_servername != ''
  name: (Let's Encrypt) cd /etc/letsencrypt/live/{{ httpd_front_www_servername }}; cp /vagrant/ansible/roles/letsencrypt/templates/etc/letsencrypt/live/{{ httpd_front_www_servername }}/*.pem ./; chmod 644 *.pem; chown root:root *.pem
  copy: src={{ item }} dest="/etc/letsencrypt/live/{{ httpd_front_www_servername }}/" mode=664 owner=root group=root force=no
  with_fileglob:
    - "templates/etc/letsencrypt/live/{{ httpd_front_www_servername }}/*.pem"
- when: httpd_enable_letsencrypt == 2 and httpd_front_www_servername != ''
  name: (Let's Encrypt[force] cd /etc/letsencrypt/live/{{ httpd_front_www_servername }}; cp /vagrant/ansible/roles/letsencrypt/templates/etc/letsencrypt/live/{{ httpd_front_www_servername }}/*.pem ./; chmod 644 *.pem; chown root:root *.pem
  copy: src={{ item }} dest="/etc/letsencrypt/live/{{ httpd_front_www_servername }}/" mode=664 owner=root group=root force=yes
  with_fileglob:
    - "templates/etc/letsencrypt/live/{{ httpd_front_www_servername }}/*.pem"

- when: httpd_enable_letsencrypt == 1
  name: (Let's Encrypt) cd /etc/cron.weekly; cp /vagrant/ansible/roles/letsencrypt/templates/etc/cron.weekly/renew_letsencrypt.cron ./; chmod 740 renew_letsencrypt.cron; chown root:wheel renew_letsencrypt.cron
  template: src="templates/etc/cron.weekly/renew_letsencrypt.cron" dest="/etc/cron.weekly/" mode=740 owner=root group=wheel
- when: httpd_enable_letsencrypt == 1
  name: (Let's Encrypt) cd /etc/logrotate.d; cp /vagrant/ansible/roles/letsencrypt/templates/etc/logrotate.d/renew_letsencrypt ./; chmod 644 renew_letsencrypt; chown root:root renew_letsencrypt
  template: src="templates/etc/logrotate.d/renew_letsencrypt" dest="/etc/logrotate.d/" mode=644 owner=root group=root backup=no

### ConoHa DNS ###
- when: conoha_enable_letsencrypt == 1
  name: (ConoHa DNS) mkdir -p /usr/local/bin/conoha; chmod 750 /usr/local/bin/conoha; chown root:wheel /usr/local/bin/conoha
  file: path="/usr/local/bin/conoha" state=directory mode=750 owner=root group=wheel
- when: conoha_enable_letsencrypt == 1
  name: (ConoHa DNS) cd /usr/local/bin/conoha; cp /vagrant/ansible/roles/nginx/templatesusr/local/bin/conoha/{create,delete}_dns_record.sh ./; chmod 750 {create,delete}_dns_record.sh; chown root:wheel {create,delete}_dns_record.sh
  template: src={{ item }} dest="/usr/local/bin/conoha/" mode=750 owner=root group=wheel backup=yes
  with_fileglob:
    - "templates/usr/local/bin/conoha/create_dns_record.sh"
    - "templates/usr/local/bin/conoha/delete_dns_record.sh"
