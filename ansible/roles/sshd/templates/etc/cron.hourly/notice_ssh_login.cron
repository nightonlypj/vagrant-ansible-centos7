#!/bin/sh

BATCH_NAME='notice_ssh_login'
LOG_FILE="/var/log/$BATCH_NAME.log"
TARGET_PATH='/var/spool/.notice_ssh_login'
ATTR_CODE=622
GROUP_NAME='root'

error_msg=''
write_log () {
	echo "`date +"%Y/%m/%d %H:%M:%S"` ($$) [$1] $2" >> $LOG_FILE
	[ $1 = 'ERROR' ] && error_msg="$error_msg[$1] $2\n"
}

send_error_mail () {
	[ -n "$error_msg" ] && return
	echo -e "$error_msg" | mail -s "[WARNING]$BATCH_NAME report for `hostname`" -r crond warning
	write_log 'INFO' 'Send error mail'
}

send_report_mail () {
	if [ ! -e "$TARGET_PATH" ]; then
		write_log 'ERROR' "Not found $TARGET_PATH"
		return
	fi
	if [ ! -s "$TARGET_PATH" ]; then
		write_log 'INFO' 'Skip send mail'
		return
	fi

	new=${TARGET_PATH}.new
	touch $new > /dev/null 2>> $LOG_FILE
	if [ $? -ne 0 ]; then
		write_log 'ERROR' "Touch $new"
		return
	fi
	chmod $ATTR_CODE $new > /dev/null 2>> $LOG_FILE
	if [ $? -ne 0 ]; then
		write_log 'ERROR' "Chmod $new"
		return
	fi
	chgrp $GROUP_NAME $new > /dev/null 2>> $LOG_FILE
	if [ $? -ne 0 ]; then
		write_log 'ERROR' "Chgrp $new"
		return
	fi

	old=${TARGET_PATH}.old
	mv $TARGET_PATH $old > /dev/null 2>> $LOG_FILE
	if [ $? -ne 0 ]; then
		write_log 'ERROR' "Move $TARGET_PATH -> $old"
		return
	fi
	mv $new $TARGET_PATH > /dev/null 2>> $LOG_FILE
	if [ $? -ne 0 ]; then
		write_log 'ERROR' "Move $new -> $TARGET_PATH"
		return
	fi

	cat $old | mail -s "$BATCH_NAME report for `hostname`" -r crond root
	write_log 'INFO' 'Send mail'
}

write_log 'INFO' '=== START ==='
send_report_mail
send_error_mail
write_log 'INFO' '=== END ==='
