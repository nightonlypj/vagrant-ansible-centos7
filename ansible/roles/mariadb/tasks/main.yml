### yum ###
- name: yum -y install mariadb mariadb-server mariadb-devel MySQL-python
  yum: name={{ item }} state=present
  with_items:
    - mariadb
    - mariadb-server
    - mariadb-devel
    - MySQL-python

### conf ###
- name: cd /etc; cp /vagrant/ansible/roles/mariadb/templates/etc/my.cnf ./; chmod 644 my.cnf; chown root:root my.cnf
  template: src="templates/etc/my.cnf" dest="/etc/" mode=644 owner=root group=root backup=yes
  notify: systemctl restart mariadb
- name: cd /etc/my.cnf.d; cp /vagrant/ansible/roles/mariadb/templates/etc/my.cnf.d/* ./; chmod 644 *; chown root:root *
  template: src={{ item }} dest="/etc/my.cnf.d/" mode=644 owner=root group=root backup=yes
  with_fileglob:
    - "templates/etc/my.cnf.d/*"
  notify: systemctl restart mariadb

### log ###
- name: cd /var/log; mkdir -p mariadb; chmod 750 mariadb; chown mysql:wheel mariadb
  file: path="/var/log/mariadb" state=directory mode=750 owner=mysql group=wheel
- name: cd /var/log/mariadb; touch {error,slow_query}.log; chmod 644 {error,slow_query}.log; chown mysql:mysql {error,slow_query}.log
  file: path={{ item }} state=touch mode=644 owner=mysql group=mysql
  with_items:
    - "/var/log/mariadb/error.log"
    - "/var/log/mariadb/slow_query.log"
- when: hosts_env == 'development'
  name: (development) cd /var/log/mariadb; touch general.log; chmod 644 general.log; chown mysql:mysql general.log
  file: path="/var/log/mariadb/general.log" state=touch mode=644 owner=mysql group=mysql

- name: cd /etc/logrotate.d; cp /vagrant/ansible/roles/mariadb/templates/etc/logrotate.d/{mariadb,mysql} ./; chmod 644 {mariadb,mysql}; chown root:root {mariadb,mysql}
  template: src={{ item }} dest="/etc/logrotate.d/" mode=644 owner=root group=root backup=no
  with_fileglob:
    - "templates/etc/logrotate.d/mariadb"
    - "templates/etc/logrotate.d/mysql"
- name: cd /root; cp /vagrant/ansible/roles/mariadb/templates/root/.my.cnf ./; chmod 600 .my.cnf; chown root:root .my.cnf
  template: src="templates/root/.my.cnf" dest="/root/" mode=600 owner=root group=root backup=yes

- name: ln -s /var/log/mariadb /var/log/mysql
  file: src="/var/log/mariadb" dest="/var/log/mysql" state=link

### backup ###
- name: mkdir -p /var/backup/mysqldump; chmod 750 /var/backup/{.,mysqldump}; chown root:wheel /var/backup/{.,mysqldump}
  file: path={{ item }} state=directory mode=750 owner=root group=wheel
  with_items:
    - "/var/backup"
    - "/var/backup/mysqldump"
- name: cd /etc/cron.daily; cp /vagrant/ansible/roles/mariadb/templates/etc/cron.daily/backup_mysql.cron ./; chmod 740 backup_mysql.cron; chown root:wheel backup_mysql.cron
  template: src="templates/etc/cron.daily/backup_mysql.cron" dest="/etc/cron.daily/" mode=740 owner=root group=wheel backup=no
- name: cd /etc/logrotate.d; cp /vagrant/ansible/roles/mariadb/templates/etc/logrotate.d/backup_mysql ./; chmod 644 backup_mysql; chown root:root backup_mysql
  template: src="templates/etc/logrotate.d/backup_mysql" dest="/etc/logrotate.d/" mode=644 owner=root group=root backup=no

### start ###
- name: systemctl start mariadb; systemctl enable mariadb
  systemd: name=mariadb state=started enabled=yes

### root password ###
- name: mysql> UPDATE mysql.user SET password=PASSWORD('{{ mysql_root_password }}') WHERE User = 'root' AND Host = 'localhost';
  mysql_user:
    name: root
    host: localhost
    password: "{{ mysql_root_password }}"
    login_user: ''
    login_password: ''
  ignore_errors: yes

- name: mysql> UPDATE mysql.user SET password=PASSWORD('{{ mysql_root_password }}') WHERE User = 'root';
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}" 
  with_items:
    - "{{ ansible_fqdn }}"
    - 127.0.0.1
    - ::1

### delete anonymous/fqdn ###
- name: mysql> DELETE FROM user WHERE User = '';
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}" 

- name: mysql> DELETE FROM user WHERE User = 'root' AND Host = '{{ ansible_fqdn }}';
  mysql_user:
    name: 'root'
    host: "{{ ansible_fqdn }}"
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}" 

### drop test ###
- name: mysql> DROP DATABASE test;
  mysql_db:
    name: 'test'
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}" 

### create database/user ###
- name: mysql> CREATE DATABASE {{ mysql_dbname }} CHARACTER SET utf8;
  mysql_db:
    name: "{{ mysql_dbname }}"
    encoding: utf8
    login_user: root
    login_password: "{{ mysql_root_password }}" 

- name: mysql> CREATE USER '{{ mysql_username }}'@'%' IDENTIFIED BY '{{ mysql_password }}'; GRANT ALL PRIVILEGES ON {{ mysql_dbname }}.* TO '{{ mysql_username }}'@'%';
  mysql_user:
    name: "{{ mysql_username }}"
    host: "%"
    password: "{{ mysql_password }}"
    priv: "{{ mysql_dbname }}.*:ALL"
    login_user: root
    login_password: "{{ mysql_root_password }}" 
