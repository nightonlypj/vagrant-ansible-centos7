### yum ###
- when: ansible_distribution == 'CentOS'
  import_tasks: roles/common/tasks/remi.yml
- when: ansible_distribution == 'CentOS'
#  name: (CentOS) yum -y --enablerepo=remi-php73,remi-safe,epel install php php-devel php-gd php-gmp php-intl php-mbstring php-pdo php-pear php-xml php-fpm php-pecl-imagick php-mysqlnd php-pgsql php-pecl-redis php-mongodb
  name: (CentOS) yum -y --enablerepo=remi-php73,remi-safe,epel install php php-devel php-gd php-gmp php-intl php-mbstring php-pdo php-pear php-xml php-fpm php-pecl-imagick php-mysqlnd
  yum: name={{ item }} state=present enablerepo=remi-php73,remi-safe,epel
  with_items:
    - php
    - php-devel
    - php-gd
    - php-gmp
    - php-intl
    - php-mbstring
    - php-pdo
    - php-pear
    - php-xml
    - php-fpm
    # Use ImageMagick
    - php-pecl-imagick
    # Use MariaDB or MySQL
    - php-mysqlnd
    # Use PostgreSQL
#    - php-pgsql
    # Use Redis
# TODO: (Amazon) Error php-pecl-redis
#    - php-pecl-redis
    # Use MongoDB
# TODO: (Amazon) Error php-mongodb
#    - php-mongodb
  notify: systemctl restart php-fpm
- when: ansible_distribution == 'Amazon'
  name: (Amazon) amazon-linux-extras enable php7.3
  shell: amazon-linux-extras enable php7.3
- when: ansible_distribution == 'Amazon'
#  name: (Amazon) yum -y --enablerepo=epel install php php-devel php-gd php-gmp php-intl php-mbstring php-pdo php-pear php-xml php-fpm php-pecl-imagick php-mysqlnd php-pgsql php-pecl-redis php-mongodb
  name: (Amazon) yum -y --enablerepo=epel install php php-devel php-gd php-gmp php-intl php-mbstring php-pdo php-pear php-xml php-fpm php-pecl-imagick php-mysqlnd
  yum: name={{ item }} state=present enablerepo=epel
  with_items:
    - php
    - php-devel
    - php-gd
    - php-gmp
    - php-intl
    - php-mbstring
    - php-pdo
    - php-pear
    - php-xml
    - php-fpm
    # Use ImageMagick
    - php-pecl-imagick
    # Use MariaDB or MySQL
    - php-mysqlnd
    # Use PostgreSQL
#    - php-pgsql
    # Use Redis
# TODO: (Amazon) Error php-pecl-redis
#    - php-pecl-redis
    # Use MongoDB
# TODO: (Amazon) Error php-mongodb
#    - php-mongodb
  notify: systemctl restart php-fpm

### conf ###
- name: cd /etc; cp /vagrant/ansible/roles/php73-nginx/templates/etc/php.ini ./; chmod 644 php.ini; chown root:root php.ini
  template: src="templates/etc/php.ini" dest="/etc/" mode=644 owner=root group=root backup=yes
  notify: systemctl restart php-fpm
- name: cd /etc/php.d; cp /vagrant/ansible/roles/php73-nginx/templates/etc/php.d/* ./; chmod 644 *; chown root:root *
  template: src={{ item }} dest="/etc/php.d/" mode=644 owner=root group=root backup=yes
  with_fileglob:
    - "templates/etc/php.d/*"
  notify: systemctl restart php-fpm

- name: cd /etc; cp /vagrant/ansible/roles/php73-nginx/templates/etc/php-fpm.conf ./; chmod 644 php-fpm.conf; chown root:root php-fpm.conf
  template: src="templates/etc/php-fpm.conf" dest="/etc/" mode=644 owner=root group=root backup=yes
  notify: systemctl restart php-fpm
- name: cd /etc/php-fpm.d; cp /vagrant/ansible/roles/php73-nginx/templates/etc/php-fpm.d/* ./; chmod 644 *; chown root:root *
  template: src={{ item }} dest="/etc/php-fpm.d/" mode=644 owner=root group=root backup=yes
  with_fileglob:
    - "templates/etc/php-fpm.d/*"
  notify: systemctl restart php-fpm

- name: cd /var/lib/php; mkdir -p {session,wsdlcache}; chmod 770 {session,wsdlcache}; chown root:nginx {session,wsdlcache}
  file: path={{ item }} state=directory mode=770 owner=root group=nginx
  with_items:
    - "/var/lib/php/session"
    - "/var/lib/php/wsdlcache"

### log ###
- name: cd /var/log; mkdir -p php-fpm; chmod 750 php-fpm; chown nginx:wheel php-fpm
  file: path="/var/log/php-fpm" state=directory mode=750 owner=nginx group=wheel
- name: cd /var/log/php-fpm; touch error.log; chmod 644 error.log; chown root:root error.log
  file: path="/var/log/php-fpm/error.log" state=touch mode=644 owner=root group=root

- name: cd /etc/logrotate.d; cp /vagrant/ansible/roles/php73-nginx/templates/etc/logrotate.d/php-fpm ./; chmod 644 php-fpm; chown root:root php-fpm
  template: src="templates/etc/logrotate.d/php-fpm" dest="/etc/logrotate.d/" mode=644 owner=root group=root backup=no

### check/start ###
- name: php-fpm -t
  shell: php-fpm -t

- name: systemctl start php-fpm; systemctl enable php-fpm
  systemd: name=php-fpm state=started enabled=yes
