#!/bin/sh

BATCH_NAME='backup_nginx_contents'
LOG_FILE="/var/log/$BATCH_NAME.log"
TARGET_PATH='/var/backup/nginx_contents'
SOURCE_PATH='/usr/share'
SOURCE_NAME='nginx'
EXT_NAME='.tar.gz'
{% if hosts_env == 'development' or hosts_env == 'test' %}
RM_MTIME=2
{% else %}
RM_MTIME=7
{% endif %}
ATTR_CODE=660
GROUP_NAME='wheel'

error_msg=''
write_log () {
	echo -e "`date +"%Y/%m/%d %H:%M:%S"` ($$) [$1] $2" >> $LOG_FILE
	[ $1 = 'ERROR' ] && error_msg="$error_msg[$1] $2\n"
}

send_error_mail () {
	[ -z "$error_msg" ] && return
	echo -e "$error_msg" | mail -s "[WARNING]$BATCH_NAME report for `hostname`" -r crond warning
	write_log 'INFO' 'Send error mail'
}

delete_target_files() {
	files=`ionice -c 2 -n 7 nice -n 19 find $TARGET_PATH/ -name "*$EXT_NAME" -daystart -mtime +$RM_MTIME -type f`
	for file in $files; do
		fuser $file > /dev/null 2>> $LOG_FILE
		if [ $? -ne 1 ]; then
			write_log 'INFO' "Skip $file"
			continue
		fi

		ionice -c 2 -n 7 nice -n 19 rm $file > /dev/null 2>> $LOG_FILE
		if [ $? -ne 0 ]; then
			write_log 'ERROR' "Delete $file"
			continue
		fi
		write_log 'INFO' "Delete $file"
	done
}

compress_files() {
	file="$TARGET_PATH/${SOURCE_NAME}_`date "+%Y%m%d"`$EXT_NAME"
	cd $SOURCE_PATH
	ionice -c 2 -n 7 nice -n 19 tar zcvf $file $SOURCE_NAME > /dev/null 2>> $LOG_FILE
	if [ $? -ne 0 ]; then
		write_log 'ERROR' "Compress $SOURCE_PATH/$SOURCE_NAME -> $file"
		continue
	fi
	write_log 'INFO' "Compress $SOURCE_PATH/$SOURCE_NAME -> $file"

	chmod $ATTR_CODE $file > /dev/null 2>> $LOG_FILE
	[ $? -ne 0 ] && write_log 'ERROR' "Chmod $file"

	chgrp $GROUP_NAME $file > /dev/null 2>> $LOG_FILE
	[ $? -ne 0 ] && write_log 'ERROR' "Chgrp $file"
}

write_log 'INFO' '=== START ==='
delete_target_files
compress_files
send_error_mail
write_log 'INFO' '=== END ==='
